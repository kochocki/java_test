package lab2;

import java.util.Arrays;
import java.util.Collection;

import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;

@RunWith(Parameterized.class)
public class Gra_test {
	private static Gra gra;

	@BeforeClass
	public static void setUp() {
		gra = new Gra();
	}

	@Test
	public void cyfrokradTest() {
		assertNull(gra.cyfrokrad(1));
	}

	@Test
	public void cyfrokradTest2() {
		assertNull(gra.cyfrokrad(0));
	}

	@Test
	public void cyfrokradTest3() {
		assertNull(null, gra.cyfrokrad(-1));
	}

	@Test
	public void cyfrokradTest4() {
		assertNull(null, gra.cyfrokrad(9));
	}

	@Test
	public void cyfrokradTest5() {
		assertNull(null, gra.cyfrokrad(-9));
	}

	@Test
	public void cyfrokradTest6() {
		assertThat(gra.cyfrokrad(10), either(is(1)).or(is(0)));
	}

	@Test
	public void cyfrokradTest7() {
		assertThat(gra.cyfrokrad(-10), either(is(-1)).or(is(0)));
	}

	@Test
	public void cyfrokradTest8() {
		assertEquals(3, gra.cyfrokrad(4556).toString().length());
	}

	@Test
	public void cyfrokradTest9() {
		assertEquals(1, gra.cyfrokrad(12).toString().length());
	}

	@Test
	public void cyfrokradTest10() {
		assertThat(gra.cyfrokrad(12), either(is(1)).or(is(2)));
	}

	@Test
	public void cyfrokradTest11() {
		assertThat(gra.cyfrokrad(-123), either(is(-12)).or(is(-23)).or(is(-13)));
	}

	@Test(expected = NieudanyPsikusException.class)
	public void hultajchochlaTest1() throws NieudanyPsikusException {
		gra.hultajchochla(0);
	}

	@Test(expected = NieudanyPsikusException.class)
	public void hultajchochlaTest2() throws NieudanyPsikusException {
		gra.hultajchochla(1);
	}

	@Test(expected = NieudanyPsikusException.class)
	public void hultajchochlaTest3() throws NieudanyPsikusException {
		gra.hultajchochla(-1);
	}

	@Test(expected = NieudanyPsikusException.class)
	public void hultajchochlaTest4() throws NieudanyPsikusException {
		gra.hultajchochla(9);
	}

	@Test(expected = NieudanyPsikusException.class)
	public void hultajchochlaTest5() throws NieudanyPsikusException {
		gra.hultajchochla(-9);
	}

	@Test
	public void hultajchochlaTest6() throws NieudanyPsikusException {
		assertThat(gra.hultajchochla(10), is(1));
	}

	@Test
	public void hultajchochlaTest7() throws NieudanyPsikusException {
		assertThat(gra.hultajchochla(-10), is(-1));
	}

	@Test
	public void hultajchochlaTest8() throws NieudanyPsikusException {
		assertThat(gra.hultajchochla(123),
				either(is(132)).or(is(213)).or(is(321)));
	}

	@Test
	public void hultajchochlaTest9() throws NieudanyPsikusException {
		assertThat(gra.hultajchochla(256),
				either(is(265)).or(is(652)).or(is(526)));
	}

	@Test
	public void hultajchochlaTest10() throws NieudanyPsikusException {
		assertThat(gra.hultajchochla(-123),
				either(is(-132)).or(is(-213)).or(is(-321)));
	}

	@Test
	public void hultajchochlaTest11() throws NieudanyPsikusException {
		assertThat(gra.hultajchochla(-256),
				either(is(-265)).or(is(-652)).or(is(-526)));
	}

	// @Test
	// public void nieksztaltekTest() {
	// assertThat(gra.nieksztaltek(0), is(0));
	// }
	//
	// @Test
	// public void nieksztaltekTest2() {
	// assertThat(gra.nieksztaltek(1), is(1));
	// }
	//
	// @Test
	// public void nieksztaltekTest3() {
	// assertThat(gra.nieksztaltek(-1), is(-1));
	// }
	//
	// @Test
	// public void nieksztaltekTest4() {
	// assertThat(gra.nieksztaltek(9), is(9));
	// }

	@Test
	public void nieksztaltekTest5() {
		assertThat(gra.nieksztaltek(-9), is(-9));
	}

	@Test
	public void nieksztaltekTest6() {
		assertThat(gra.nieksztaltek(10), is(10));
	}

	@Test
	public void nieksztaltekTest7() {
		assertThat(gra.nieksztaltek(-10), is(-10));
	}

	@Test
	public void nieksztaltekTest8() {
		assertThat(gra.nieksztaltek(3), is(8));
	}

	public void nieksztaltekTest9() {
		assertThat(gra.nieksztaltek(-3), is(-8));
	}

	public void nieksztaltekTest10() {
		assertThat(gra.nieksztaltek(7), is(1));
	}

	public void nieksztaltekTest11() {
		assertThat(gra.nieksztaltek(-7), is(-1));
	}

	public void nieksztaltekTest12() {
		assertThat(gra.nieksztaltek(6), is(9));
	}

	public void nieksztaltekTest13() {
		assertThat(gra.nieksztaltek(-6), is(-9));
	}

	public void nieksztaltekTest14() {
		assertThat(gra.nieksztaltek(3), is(8));
	}

	public void nieksztaltekTest15() {
		assertThat(gra.nieksztaltek(-3), is(-8));
	}
}
