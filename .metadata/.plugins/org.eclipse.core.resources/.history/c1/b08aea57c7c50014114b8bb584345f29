package lab2;

import static org.hamcrest.CoreMatchers.either;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.Collection;

import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

@RunWith(Parameterized.class)
public class NieksztaltekParametrizedTest {
	int _Input;
	int _Expected;
	private static Gra gra;
	
	@BeforeClass
	public static void setUp() {
		gra = new Gra();
	}
	
	@Parameters
	public static Collection<Object[]> data() {
		return Arrays.asList(new Object[][] { { 0, 0 }, { 1, 1 }, { -1, -1 },
				{ 9, 9 }, { -9, -9 }, { 10, 10 }, { -10, -10 }, { 3, 8 },
				{ -3, -8 }, {7, 1}, {-7, -1}, { 6, 9 }, { -6, -9} });
	}
	
	public NieksztaltekParametrizedTest(int input, int expected) {
		_Input = input;
		_Expected = expected;
	}

	@Test
    public void NieksztaltekParametrizedTests() {
        assertEquals(Integer.valueOf(_Expected), gra.nieksztaltek(_Input));
    }
	
	@Test
	public void cyfrokradTest10() {
		assertThat(gra.nieksztaltek(137), either(is(187)).or(is(131)));
	}
	
	
}